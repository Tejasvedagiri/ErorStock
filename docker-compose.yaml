version: '3.8'
services:
   ${KAFKA_HOST}:
    image: docker.io/bitnami/kafka:3.5
    ports:
      - "9092:9092"
    volumes:
      - "/docker/data/erorstock/kafka_data:/bitnami"
    environment:
      # KRaft settings
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN
      KAFKA_CONTROLLER_USER: {KAFKA_CONTROLLER_USER}
      KAFKA_CONTROLLER_PASSWORD: ${KAFKA_CONTROLLER_USER}
      # Listeners
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_LISTENERS: SASL_SSL://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: SASL_SSL://localhost:9092
      KAFKA_CLIENT_USERS: ${KAFKA_CLIENT_USERS}
      KAFKA_CLIENT_PASSWORDS: ${KAFKA_CLIENT_PASSWORDS}
      KAFKA_CLIENT_LISTENER_NAME: SASL_SSL
  producer:
    image: name
    environment:
      KAFKA_CLIENT_PASSWORDS: ${KAFKA_CLIENT_PASSWORDS}
      KAFKA_CLIENT_PASSWORDS: ${KAFKA_CLIENT_PASSWORDS}
      KAFKA_HOST: ${KAFKA_HOST}
      KAFKA_PORT: 9092
    depends_on:
      - ${KAFKA_HOST}
  harvester:
    image: name
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_PORT: ${MYSQL_PORT}
      KAFKA_CLIENT_PASSWORDS: ${KAFKA_CLIENT_PASSWORDS}
      KAFKA_CLIENT_PASSWORDS: ${KAFKA_CLIENT_PASSWORDS}
      KAFKA_HOST: ${KAFKA_HOST}
      KAFKA_PORT: 9092
    depends_on:
      - kafka
  db:
    container_name: mysql
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_PORT: ${MYSQL_PORT}
    command: --default-authentication-plugin=mysql_native_password
    
  api:
    image: ghcr.io/tejasvedagiri/stockapi:latest
    # build:
    #   context: ../StockAPI/  
    #   dockerfile: Dockerfile  
    container_name: Eror_Stock_API
    restart: always
    ports:
      - 81:80
    environment:
      DB_USERNAME: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      DB_HOSTNAME: ${MYSQL_HOSTNAME}
      DB_PORT: ${MYSQL_PORT}
      DB_DATABASE: ${MYSQL_DATABASE}
      API_USERNAME: ${API_USERNAME}
      API_PASSWORD: ${API_PASSWORD}
      DB_TYPE: ${DB_TYPE}
  ui:
    image: ghcr.io/tejasvedagiri/stockui:latest
    # build:
    #   context: ../StockUI/  
    #   dockerfile: Dockerfile  
    container_name: Eror_Stock_UI
    restart: always
    ports:
      - 80:80
    environment:
      REACT_APP_API_ENDPOINT: ${REACT_APP_API_ENDPOINT}

